--- /usr/include/Security/Authorization.h	2008-02-19 11:34:25.000000000 +0000
+++ /usr/include/Security/Authorization.h	2008-03-24 11:07:40.000000000 +0000
@@ -30,7 +30,7 @@
 #ifndef _SECURITY_AUTHORIZATION_H_
 #define _SECURITY_AUTHORIZATION_H_
 
-#include <CoreServices/../Frameworks/CarbonCore.framework/Headers/MacTypes.h>
+#include <MacTypes.h>
 #include <stdio.h>
 
 #if defined(__cplusplus)
--- /usr/include/AvailabilityMacros.h	2008-02-27 06:49:24.000000000 +0000
+++ /usr/include/AvailabilityMacros.h	2008-03-28 14:10:13.000000000 +0000
@@ -84,7 +84,13 @@
     #ifdef __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
         #define MAC_OS_X_VERSION_MIN_REQUIRED __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
     #else
-        #if __ppc64__ || __i386__ || __x86_64__
+        #ifdef __ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__
+            #if __ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__ < 10200
+                #define MAC_OS_X_VERSION_MIN_REQUIRED MAC_OS_X_VERSION_10_4
+            #else
+                #define MAC_OS_X_VERSION_MIN_REQUIRED MAC_OS_X_VERSION_10_5
+            #endif
+        #elif __ppc64__ || __i386__ || __x86_64__
             #define MAC_OS_X_VERSION_MIN_REQUIRED MAC_OS_X_VERSION_10_4
 		#elif __arm__
 			#define MAC_OS_X_VERSION_MIN_REQUIRED MAC_OS_X_VERSION_10_5
--- /usr/include/CoreFoundation/CoreFoundation.h	2008-02-27 06:36:09.000000000 +0000
+++ /usr/include/CoreFoundation/CoreFoundation.h	2008-03-29 18:47:27.000000000 +0000
@@ -78,7 +78,7 @@
 #include <CoreFoundation/CFMachPort.h>
 #include <CoreFoundation/CFUserNotification.h>
 #endif
-#if (TARGET_OS_MAC && !TARGET_OS_EMBEDDED)
+#if (TARGET_OS_MAC && !TARGET_OS_EMBEDDED) || TARGET_OS_EMBEDDED
 #include <CoreFoundation/CFXMLNode.h>
 #include <CoreFoundation/CFXMLParser.h>
 #ifndef CF_OPEN_SOURCE
--- /usr/include/CarbonCore/FixMath.h	2008-02-19 12:14:55.000000000 +0000
+++ /usr/include/CarbonCore/FixMath.h	2008-03-27 09:50:49.000000000 +0000
@@ -90,7 +90,7 @@
 
 #else
 
-    #error "Unknown architecture."
+    //#error "Unknown architecture."
     // To use unoptimized standard C code, remove above line.
     #define _IntSaturate(x) ((x) <= -0x1p31f ? (int) -0x80000000 : \
         0x1p31f <= (x) ? (int) 0x7fffffff : (int) (x))
--- /usr/include/CarbonCore/fp.h	2008-02-19 12:14:55.000000000 +0000
+++ /usr/include/CarbonCore/fp.h	2008-03-29 18:41:50.000000000 +0000
@@ -1314,7 +1314,7 @@
 *   dec2l       Similar to dec2num except a long is returned.                   *
 *                                                                               *
 ********************************************************************************/
-#if TARGET_CPU_PPC || TARGET_CPU_X86 || TARGET_CPU_PPC64 || TARGET_CPU_X86_64
+#if TARGET_CPU_PPC || TARGET_CPU_X86 || TARGET_CPU_PPC64 || TARGET_CPU_X86_64 || TARGET_CPU_ARM
     #define SIGDIGLEN      36  
 #endif
 #define      DECSTROUTLEN   80               /* max length for dec2str output */
--- /usr/include/machine/locks.h	2008-04-18 07:47:44.000000000 +0000
+++ /usr/include/machine/locks.h	2008-04-18 07:46:43.000000000 +0000
@@ -27,6 +27,8 @@
 #include "ppc/locks.h"
 #elif defined (__i386__)
 #include "i386/locks.h"
+#elif defined (__arm__)
+#include "arm/locks.h"
 #else
 #error architecture not supported
 #endif
--- /usr/include/CarbonCore/MachineExceptions.h	2006-09-11 23:05:25.000000000 -0500
+++ /usr/include/CarbonCore/MachineExceptions.h	2007-07-23 18:15:13.000000000 -0500
@@ -277,6 +277,60 @@
 typedef struct ExceptionInformation     ExceptionInformation;
 #endif  /* TARGET_CPU_X86 */
 
+#if TARGET_CPU_ARM
+
+struct MachineInformationARM {
+    int unused;
+};
+typedef struct MachineInformationARM MachineInformationARM;
+
+struct RegisterInformationARM {
+    unsigned int R0; 
+    unsigned int R1; 
+    unsigned int R2; 
+    unsigned int R3; 
+    unsigned int R4; 
+    unsigned int R5; 
+    unsigned int R6; 
+    unsigned int R7; 
+    unsigned int R8; 
+    unsigned int R9; 
+    unsigned int R10; 
+    unsigned int R11; 
+    unsigned int R12; 
+    unsigned int R13; 
+    unsigned int R14; 
+    unsigned int R15; 
+    unsigned int R16; 
+    unsigned int R17; 
+};
+typedef struct RegisterInformationARM RegisterInformationARM;
+
+struct FPUInformationARM {
+    unsigned int dunno; /* FIXME */
+};
+typedef struct FPUInformationARM FPUInformationARM;
+
+struct VectorInformationARM {
+    unsigned int dunno[8];
+};
+typedef struct VectorInformationARM VectorInformationARM;
+
+typedef MachineInformationARM         MachineInformation;
+typedef RegisterInformationARM        RegisterInformation;
+typedef FPUInformationARM             FPUInformation;
+typedef VectorInformationARM          VectorInformation;
+struct ExceptionInformation {
+  ExceptionKind       theKind;
+  MachineInformation * machineState;
+  RegisterInformation * registerImage;
+  FPUInformation *    FPUImage;
+  ExceptionInfo       info;
+  VectorInformation * vectorImage;
+};
+typedef struct ExceptionInformation     ExceptionInformation;
+#endif
+
 /* 
     Note:   An ExceptionHandler is NOT a UniversalProcPtr, except in Carbon.
             It must be a PowerPC function pointer with NO routine descriptor, 
--- /usr/include/arm/signal.h	2008-02-27 05:37:19.000000000 +0000
+++ /usr/include/arm/signal.h	2008-03-24 09:51:14.000000000 +0000
@@ -13,6 +13,8 @@
 
 #ifndef _ANSI_SOURCE
 
+typedef int sig_atomic_t;
+
 #ifdef __APPLE_API_OBSOLETE
 
 #if !defined(_POSIX_C_SOURCE) || defined(_DARWIN_C_SOURCE)
@@ -20,8 +22,6 @@
 #define __need_struct_sigcontext
 #include <arm/_structs.h>
 
-typedef int sig_atomic_t;
-
 #endif /* (_POSIX_C_SOURCE && !_DARWIN_C_SOURCE) */
 
 #endif /* __APPLE_API_OBSOLETE */
