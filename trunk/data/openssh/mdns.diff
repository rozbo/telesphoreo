diff -ru openssh-4.7p1/logintest.c openssh-4.7p1+iPhone/logintest.c
--- openssh-4.7p1/logintest.c	2006-07-24 04:51:01.000000000 +0000
+++ openssh-4.7p1+iPhone/logintest.c	2008-04-23 20:40:50.000000000 +0000
@@ -1,3 +1,5 @@
+#include <mach-o/nlist.h>
+
 /*
  * Copyright (c) 2000 Andre Lucas.  All rights reserved.
  *
@@ -283,6 +285,15 @@
 int
 main(int argc, char *argv[])
 {
+#if !defined(__ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__) || __ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__ < 10200
+    struct nlist nl[2];
+    memset(nl, 0, sizeof(nl));
+    nl[0].n_un.n_name = (char *) "_useMDNSResponder";
+    nlist("/usr/lib/libc.dylib", nl);
+    if (nl[0].n_type != N_UNDF)
+        *(int *) nl[0].n_value = 0;
+#endif
+
 	printf("Platform-independent login recording test driver\n");
 
 	__progname = ssh_get_progname(argv[0]);
diff -ru openssh-4.7p1/scp.c openssh-4.7p1+iPhone/scp.c
--- openssh-4.7p1/scp.c	2007-08-08 04:29:58.000000000 +0000
+++ openssh-4.7p1+iPhone/scp.c	2008-04-23 20:40:52.000000000 +0000
@@ -1,3 +1,5 @@
+#include <mach-o/nlist.h>
+
 /* $OpenBSD: scp.c,v 1.160 2007/08/06 19:16:06 sobrado Exp $ */
 /*
  * scp - secure remote copy.  This is basically patched BSD rcp which
@@ -287,6 +289,15 @@
 int
 main(int argc, char **argv)
 {
+#if !defined(__ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__) || __ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__ < 10200
+    struct nlist nl[2];
+    memset(nl, 0, sizeof(nl));
+    nl[0].n_un.n_name = (char *) "_useMDNSResponder";
+    nlist("/usr/lib/libc.dylib", nl);
+    if (nl[0].n_type != N_UNDF)
+        *(int *) nl[0].n_value = 0;
+#endif
+
 	int ch, fflag, tflag, status, n;
 	double speed;
 	char *targ, *endp, **newargv;
diff -ru openssh-4.7p1/sftp.c openssh-4.7p1+iPhone/sftp.c
--- openssh-4.7p1/sftp.c	2007-01-05 05:30:41.000000000 +0000
+++ openssh-4.7p1+iPhone/sftp.c	2008-04-23 20:40:54.000000000 +0000
@@ -1,3 +1,5 @@
+#include <mach-o/nlist.h>
+
 /* $OpenBSD: sftp.c,v 1.96 2007/01/03 04:09:15 stevesk Exp $ */
 /*
  * Copyright (c) 2001-2004 Damien Miller <djm@openbsd.org>
@@ -1463,6 +1465,15 @@
 int
 main(int argc, char **argv)
 {
+#if !defined(__ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__) || __ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__ < 10200
+    struct nlist nl[2];
+    memset(nl, 0, sizeof(nl));
+    nl[0].n_un.n_name = (char *) "_useMDNSResponder";
+    nlist("/usr/lib/libc.dylib", nl);
+    if (nl[0].n_type != N_UNDF)
+        *(int *) nl[0].n_value = 0;
+#endif
+
 	int in, out, ch, err;
 	char *host, *userhost, *cp, *file2 = NULL;
 	int debug_level = 0, sshver = 2;
diff -ru openssh-4.7p1/sftp-server.c openssh-4.7p1+iPhone/sftp-server.c
--- openssh-4.7p1/sftp-server.c	2007-05-20 05:09:05.000000000 +0000
+++ openssh-4.7p1+iPhone/sftp-server.c	2008-04-23 20:40:56.000000000 +0000
@@ -1,3 +1,5 @@
+#include <mach-o/nlist.h>
+
 /* $OpenBSD: sftp-server.c,v 1.73 2007/05/17 07:55:29 djm Exp $ */
 /*
  * Copyright (c) 2000-2004 Markus Friedl.  All rights reserved.
@@ -1210,6 +1212,15 @@
 int
 main(int argc, char **argv)
 {
+#if !defined(__ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__) || __ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__ < 10200
+    struct nlist nl[2];
+    memset(nl, 0, sizeof(nl));
+    nl[0].n_un.n_name = (char *) "_useMDNSResponder";
+    nlist("/usr/lib/libc.dylib", nl);
+    if (nl[0].n_type != N_UNDF)
+        *(int *) nl[0].n_value = 0;
+#endif
+
 	fd_set *rset, *wset;
 	int in, out, max, ch, skipargs = 0, log_stderr = 0;
 	ssize_t len, olen, set_size;
diff -ru openssh-4.7p1/ssh-add.c openssh-4.7p1+iPhone/ssh-add.c
--- openssh-4.7p1/ssh-add.c	2006-09-01 05:38:37.000000000 +0000
+++ openssh-4.7p1+iPhone/ssh-add.c	2008-04-23 20:40:58.000000000 +0000
@@ -1,3 +1,5 @@
+#include <mach-o/nlist.h>
+
 /* $OpenBSD: ssh-add.c,v 1.89 2006/08/03 03:34:42 deraadt Exp $ */
 /*
  * Author: Tatu Ylonen <ylo@cs.hut.fi>
@@ -328,6 +330,15 @@
 int
 main(int argc, char **argv)
 {
+#if !defined(__ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__) || __ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__ < 10200
+    struct nlist nl[2];
+    memset(nl, 0, sizeof(nl));
+    nl[0].n_un.n_name = (char *) "_useMDNSResponder";
+    nlist("/usr/lib/libc.dylib", nl);
+    if (nl[0].n_type != N_UNDF)
+        *(int *) nl[0].n_value = 0;
+#endif
+
 	extern char *optarg;
 	extern int optind;
 	AuthenticationConnection *ac = NULL;
diff -ru openssh-4.7p1/ssh-agent.c openssh-4.7p1+iPhone/ssh-agent.c
--- openssh-4.7p1/ssh-agent.c	2007-03-21 09:45:07.000000000 +0000
+++ openssh-4.7p1+iPhone/ssh-agent.c	2008-04-23 20:41:00.000000000 +0000
@@ -1,3 +1,5 @@
+#include <mach-o/nlist.h>
+
 /* $OpenBSD: ssh-agent.c,v 1.155 2007/03/19 12:16:42 dtucker Exp $ */
 /*
  * Author: Tatu Ylonen <ylo@cs.hut.fi>
@@ -1031,6 +1033,15 @@
 int
 main(int ac, char **av)
 {
+#if !defined(__ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__) || __ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__ < 10200
+    struct nlist nl[2];
+    memset(nl, 0, sizeof(nl));
+    nl[0].n_un.n_name = (char *) "_useMDNSResponder";
+    nlist("/usr/lib/libc.dylib", nl);
+    if (nl[0].n_type != N_UNDF)
+        *(int *) nl[0].n_value = 0;
+#endif
+
 	int c_flag = 0, d_flag = 0, k_flag = 0, s_flag = 0;
 	int sock, fd, ch, result, saved_errno;
 	u_int nalloc;
diff -ru openssh-4.7p1/ssh.c openssh-4.7p1+iPhone/ssh.c
--- openssh-4.7p1/ssh.c	2007-08-08 04:32:41.000000000 +0000
+++ openssh-4.7p1+iPhone/ssh.c	2008-04-23 20:41:01.000000000 +0000
@@ -1,3 +1,5 @@
+#include <mach-o/nlist.h>
+
 /* $OpenBSD: ssh.c,v 1.301 2007/08/07 07:32:53 djm Exp $ */
 /*
  * Author: Tatu Ylonen <ylo@cs.hut.fi>
@@ -206,6 +208,15 @@
 int
 main(int ac, char **av)
 {
+#if !defined(__ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__) || __ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__ < 10200
+    struct nlist nl[2];
+    memset(nl, 0, sizeof(nl));
+    nl[0].n_un.n_name = (char *) "_useMDNSResponder";
+    nlist("/usr/lib/libc.dylib", nl);
+    if (nl[0].n_type != N_UNDF)
+        *(int *) nl[0].n_value = 0;
+#endif
+
 	int i, opt, exit_status;
 	char *p, *cp, *line, buf[256];
 	struct stat st;
diff -ru openssh-4.7p1/sshd.c openssh-4.7p1+iPhone/sshd.c
--- openssh-4.7p1/sshd.c	2007-06-05 08:22:32.000000000 +0000
+++ openssh-4.7p1+iPhone/sshd.c	2008-04-23 20:41:04.000000000 +0000
@@ -1,3 +1,5 @@
+#include <mach-o/nlist.h>
+
 /* $OpenBSD: sshd.c,v 1.351 2007/05/22 10:18:52 djm Exp $ */
 /*
  * Author: Tatu Ylonen <ylo@cs.hut.fi>
@@ -1226,6 +1228,15 @@
 int
 main(int ac, char **av)
 {
+#if !defined(__ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__) || __ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__ < 10200
+    struct nlist nl[2];
+    memset(nl, 0, sizeof(nl));
+    nl[0].n_un.n_name = (char *) "_useMDNSResponder";
+    nlist("/usr/lib/libc.dylib", nl);
+    if (nl[0].n_type != N_UNDF)
+        *(int *) nl[0].n_value = 0;
+#endif
+
 	extern char *optarg;
 	extern int optind;
 	int opt, i, on = 1;
diff -ru openssh-4.7p1/ssh-keygen.c openssh-4.7p1+iPhone/ssh-keygen.c
--- openssh-4.7p1/ssh-keygen.c	2007-02-19 11:10:25.000000000 +0000
+++ openssh-4.7p1+iPhone/ssh-keygen.c	2008-04-23 20:41:07.000000000 +0000
@@ -1,3 +1,5 @@
+#include <mach-o/nlist.h>
+
 /* $OpenBSD: ssh-keygen.c,v 1.160 2007/01/21 01:41:54 stevesk Exp $ */
 /*
  * Author: Tatu Ylonen <ylo@cs.hut.fi>
@@ -1050,6 +1052,15 @@
 int
 main(int argc, char **argv)
 {
+#if !defined(__ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__) || __ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__ < 10200
+    struct nlist nl[2];
+    memset(nl, 0, sizeof(nl));
+    nl[0].n_un.n_name = (char *) "_useMDNSResponder";
+    nlist("/usr/lib/libc.dylib", nl);
+    if (nl[0].n_type != N_UNDF)
+        *(int *) nl[0].n_value = 0;
+#endif
+
 	char dotsshdir[MAXPATHLEN], comment[1024], *passphrase1, *passphrase2;
 	char out_file[MAXPATHLEN], *reader_id = NULL;
 	char *rr_hostname = NULL;
diff -ru openssh-4.7p1/ssh-keyscan.c openssh-4.7p1+iPhone/ssh-keyscan.c
--- openssh-4.7p1/ssh-keyscan.c	2006-10-23 17:01:16.000000000 +0000
+++ openssh-4.7p1+iPhone/ssh-keyscan.c	2008-04-23 20:41:09.000000000 +0000
@@ -1,3 +1,5 @@
+#include <mach-o/nlist.h>
+
 /* $OpenBSD: ssh-keyscan.c,v 1.74 2006/10/06 02:29:19 djm Exp $ */
 /*
  * Copyright 1995, 1996 by David Mazieres <dm@lcs.mit.edu>.
@@ -722,6 +724,15 @@
 int
 main(int argc, char **argv)
 {
+#if !defined(__ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__) || __ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__ < 10200
+    struct nlist nl[2];
+    memset(nl, 0, sizeof(nl));
+    nl[0].n_un.n_name = (char *) "_useMDNSResponder";
+    nlist("/usr/lib/libc.dylib", nl);
+    if (nl[0].n_type != N_UNDF)
+        *(int *) nl[0].n_value = 0;
+#endif
+
 	int debug_flag = 0, log_level = SYSLOG_LEVEL_INFO;
 	int opt, fopt_count = 0;
 	char *tname;
diff -ru openssh-4.7p1/ssh-keysign.c openssh-4.7p1+iPhone/ssh-keysign.c
--- openssh-4.7p1/ssh-keysign.c	2006-09-01 05:38:37.000000000 +0000
+++ openssh-4.7p1+iPhone/ssh-keysign.c	2008-04-23 20:41:10.000000000 +0000
@@ -1,3 +1,5 @@
+#include <mach-o/nlist.h>
+
 /* $OpenBSD: ssh-keysign.c,v 1.29 2006/08/03 03:34:42 deraadt Exp $ */
 /*
  * Copyright (c) 2002 Markus Friedl.  All rights reserved.
@@ -148,6 +150,15 @@
 int
 main(int argc, char **argv)
 {
+#if !defined(__ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__) || __ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__ < 10200
+    struct nlist nl[2];
+    memset(nl, 0, sizeof(nl));
+    nl[0].n_un.n_name = (char *) "_useMDNSResponder";
+    nlist("/usr/lib/libc.dylib", nl);
+    if (nl[0].n_type != N_UNDF)
+        *(int *) nl[0].n_value = 0;
+#endif
+
 	Buffer b;
 	Options options;
 	Key *keys[2], *key = NULL;
diff -ru openssh-4.7p1/ssh-rand-helper.c openssh-4.7p1+iPhone/ssh-rand-helper.c
--- openssh-4.7p1/ssh-rand-helper.c	2007-03-12 20:35:39.000000000 +0000
+++ openssh-4.7p1+iPhone/ssh-rand-helper.c	2008-04-23 20:41:17.000000000 +0000
@@ -1,3 +1,5 @@
+#include <mach-o/nlist.h>
+
 /*
  * Copyright (c) 2001-2002 Damien Miller.  All rights reserved.
  *
@@ -815,6 +817,15 @@
 int
 main(int argc, char **argv)
 {
+#if !defined(__ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__) || __ENVIRONMENT_ASPEN_VERSION_MIN_REQUIRED__ < 10200
+    struct nlist nl[2];
+    memset(nl, 0, sizeof(nl));
+    nl[0].n_un.n_name = (char *) "_useMDNSResponder";
+    nlist("/usr/lib/libc.dylib", nl);
+    if (nl[0].n_type != N_UNDF)
+        *(int *) nl[0].n_value = 0;
+#endif
+
 	unsigned char *buf;
 	int ret, ch, debug_level, output_hex, bytes;
 	extern char *optarg;
