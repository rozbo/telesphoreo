diff -r -u curl-7.17.1/acinclude.m4 curl-7.17.1+iPhone/acinclude.m4
--- curl-7.17.1/acinclude.m4	2007-10-24 20:08:45.000000000 +0000
+++ curl-7.17.1+iPhone/acinclude.m4	2007-12-28 11:24:03.000000000 +0000
@@ -1944,41 +1944,8 @@
        ) dnl with _THREAD_SAFE
     ]) dnl plain cpp for it
 
-    dnl determine if this strerror_r() is glibc or POSIX
-    AC_MSG_CHECKING([for a glibc strerror_r API])
-    AC_TRY_RUN([
-#include <string.h>
-#include <errno.h>
-int
-main () {
-  char buffer[1024]; /* big enough to play with */
-  char *string =
-    strerror_r(EACCES, buffer, sizeof(buffer));
-    /* this should've returned a string */
-    if(!string || !string[0])
-      return 99;
-    return 0;
-}
-],
     GLIBC_STRERROR_R="1"
     AC_DEFINE(HAVE_GLIBC_STRERROR_R, 1, [we have a glibc-style strerror_r()])
-    AC_MSG_RESULT([yes]),
-    AC_MSG_RESULT([no]),
-
-    dnl Use an inferior method of strerror_r detection while cross-compiling
-    AC_EGREP_CPP(yes, [
-#include <features.h>
-#ifdef __GLIBC__
-yes
-#endif
-], 
-      dnl looks like glibc, so assume a glibc-style strerror_r()
-      GLIBC_STRERROR_R="1"
-      AC_DEFINE(HAVE_GLIBC_STRERROR_R, 1, [we have a glibc-style strerror_r()])
-      AC_MSG_RESULT([yes]),
-      AC_MSG_NOTICE([cannot determine strerror_r() style: edit lib/config.h manually!])
-    ) dnl while cross-compiling
-    )
 
     if test -z "$GLIBC_STRERROR_R"; then
 
