diff -ru gdb-961/src/gdb/macosx/macosx-nat-excthread.c gdb-961+iPhone/src/gdb/macosx/macosx-nat-excthread.c
--- gdb-961/src/gdb/macosx/macosx-nat-excthread.c	2008-05-12 02:05:04.000000000 +0000
+++ gdb-961+iPhone/src/gdb/macosx/macosx-nat-excthread.c	2008-07-04 11:01:25.000000000 +0000
@@ -240,11 +240,17 @@
 #else
   catch_exception_raise_state
 #endif
-  (mach_port_t port,
-   exception_type_t exception_type, mach_exception_data_t exception_data,
-   mach_msg_type_number_t data_count, thread_state_flavor_t * state_flavor,
-   thread_state_t in_state, mach_msg_type_number_t in_state_count,
-   thread_state_t out_state, mach_msg_type_number_t out_state_count)
+(
+	mach_port_t exception_port,
+	exception_type_t exception,
+	const exception_data_t code,
+	mach_msg_type_number_t codeCnt,
+	int *flavor,
+	const thread_state_t old_state,
+	mach_msg_type_number_t old_stateCnt,
+	thread_state_t new_state,
+	mach_msg_type_number_t *new_stateCnt
+)
 {
   return KERN_FAILURE;
 }
@@ -255,17 +261,25 @@
 #else
   catch_exception_raise_state_identity
 #endif
-  (mach_port_t port, mach_port_t thread_port, mach_port_t task_port,
-   exception_type_t exception_type, mach_exception_data_t exception_data,
-   mach_msg_type_number_t data_count, thread_state_flavor_t * state_flavor,
-   thread_state_t in_state, mach_msg_type_number_t in_state_count,
-   thread_state_t out_state, mach_msg_type_number_t out_state_count)
+(
+	mach_port_t exception_port,
+	mach_port_t thread,
+	mach_port_t task,
+	exception_type_t exception,
+	exception_data_t code,
+	mach_msg_type_number_t codeCnt,
+	int *flavor,
+	thread_state_t old_state,
+	mach_msg_type_number_t old_stateCnt,
+	thread_state_t new_state,
+	mach_msg_type_number_t *new_stateCnt
+)
 {
   kern_return_t kret;
 
-  kret = mach_port_deallocate (mach_task_self (), task_port);
+  kret = mach_port_deallocate (mach_task_self (), task);
   MACH_CHECK_ERROR (kret);
-  kret = mach_port_deallocate (mach_task_self (), thread_port);
+  kret = mach_port_deallocate (mach_task_self (), thread);
   MACH_CHECK_ERROR (kret);
 
   return KERN_FAILURE;
